bplist00“_WebMainResource_WebSubresources’	
^WebResourceURL_WebResourceTextEncodingName_WebResourceMIMEType_WebResourceData_WebResourceFrameName_*http://webkit.org/coding/coding-style.htmlUUTF-8Ytext/htmlOCv<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"><html><head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8">

    <title>The WebKit Open Source Project - WebKit Coding Style Guidelines</title>

    <link rel="stylesheet" type="text/css" href="/css/main.css">
    <link rel="stylesheet" type="text/css" href="/css/green.css" title="green">

    <link rel="alternate stylesheet" type="text/css" href="/css/blue.css" title="blue">
    <link rel="alternate stylesheet" type="text/css" href="/css/yellow.css" title="yellow">
    <link rel="alternate stylesheet" type="text/css" href="/css/pink.css" title="pink">
    <link rel="alternate stylesheet" type="text/css" href="/css/purple.css" title="purple">
    <link rel="alternate stylesheet" type="text/css" href="/css/gray.css" title="gray">

<!--[if gte IE 5]>
    <link rel="stylesheet" type="text/css" href="/css/ie.css">
<![endif]-->

    <script type="text/javascript">
        pic1 = new Image(8,9);
        pic1.src="/images/green-bullet.png";
        pic2 = new Image(8,9);
        pic2.src="/images/blue-bullet.png";
        pic3 = new Image(8,9);
        pic3.src="/images/yellow-bullet.png";
        pic4 = new Image(8,9);
        pic4.src="/images/pink-bullet.png";
        pic5 = new Image(8,9);
        pic5.src="/images/purple-bullet.png";
    </script>
    
<style type="text/css">
pre .code {
   background-color: #F2F2F2;
}

.right {
  color: #080 !important;
}

.wrong {
  color: #f00 !important;
}
</style></head><body>

<div id="title">
<h1>The WebKit Open Source Project</h1>
</div>

<div id="icon"></div>

<div id="content">




<h2>WebKit Coding Style Guidelines</h2>
<h3>Indentation</h3>

<ol>
<li> Use spaces, not tabs. Tabs should only appear in files that require them for semantic meaning, like Makefiles.
</li>
<li> The indent size is 4 spaces.
<h4 class="right">Right:</h4>
<pre class="code">int main()
{
    return 0;
}
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">int main() 
{
        return 0;
}
</pre>
</li>
<li>In a header, code inside a namespace should be indented.
<h4 class="right">Right:</h4>
<pre class="code">// Document.h
namespace WebCore {

    class Document {
        Document();
        ...
    };

} // namespace WebCore
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">// Document.h
namespace WebCore {

class Document {
    Document();
    ...
};

} // namespace WebCore
</pre>
</li>

<li>In an implementation file, code inside a namespace should <em>not</em> be indented.
<h4 class="right">Right:</h4>
<pre class="code">// Document.cpp
namespace WebCore {

Document::Document()
{
    ...
}

} // namespace WebCore
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">// Document.cpp
namespace WebCore {

    Document::Document()
    {
        ...
    }

} // namespace WebCore
</pre>
</li>
<li>A case label should line up with its switch statement.  The case statement is indented.
<h4 class="right">Right:</h4>
<pre class="code">switch (condition) {
case fooCondition:
case barCondition:
    i++;
    break;
default:
    i--;
}
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">switch (condition) {
    case fooCondition:
    case barCondition:
        i++;
        break;
    default:
        i--;
}
</pre>
</li>

<li>Boolean expressions at the same nesting level that span multiple lines should
have their operators on the left side of the line instead of the right side.

<h4 class="right">Right:</h4>
<pre class="code">return attr->name() == srcAttr
    || attr->name() == lowsrcAttr
    || (attr->name() == usemapAttr &amp;&amp; attr->value().domString()[0] != '#');
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">return attr->name() == srcAttr ||
    attr->name() == lowsrcAttr ||
    (attr->name() == usemapAttr &amp;&amp; attr->value().domString()[0] != '#');
</pre>
</li>

</ol>

<h3>Spacing</h3>
<ol>
<li>Do not place spaces around unary operators.
<h4 class="right">Right:</h4>
<pre class="code">i++;
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">i ++;
</pre>
</li>

<li><em>Do</em> place spaces around binary and ternary operators.
<h4 class="right">Right:</h4>
<pre class="code">y = m * x + b;
f(a, b);
c = a | b;
return condition ? 1 : 0;
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">y=m*x+b;
f(a,b);
c = a|b;
return condition ? 1:0;
</pre>
</li>

<li>Place spaces between control statements and their parentheses.
<h4 class="right">Right:</h4>
<pre class="code">if (condition)
    doIt();
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">if(condition)
    doIt();
</pre>
</li>

<li>Do not place spaces between a function and its parentheses, or between a parenthesis and its content.
<h4 class="right">Right:</h4>
<pre class="code">f(a, b);
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">f (a, b);
f( a, b );
</pre>
</li>
</ol>

<h3>Line breaking</h3>
<ol>
<li>Each statement should get its own line.
<h4 class="right">Right:</h4>
<pre class="code">x++;
y++;
if (condition)
    doIt();
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">x++; y++;
if (condition) doIt();
</pre>
</li>

<li>An <code>else</code> statement should go on the same line as a preceding close brace.
<h4 class="right">Right:</h4>
<pre class="code">if (condition) {
    ...
} else {
    ...
}
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">if (condition) {
    ...
}
else {
    ...
}
</pre>
</li>

<li>An <code>else if</code> statement should be written as an <code>if</code> statement when the prior <code>if</code> concludes with a <code>return</code> statement.
<h4 class="right">Right:</h4>
<pre class="code">if (condition) {
    ...
    return someValue;
}
if (condition) {
    ...
}
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">if (condition) {
    ...
    return someValue;
} else if (condition) {
    ...
}
</pre>
</li>
</ol>

<h3>Braces</h3>
<ol>
<li> Function definitions: place each brace on its own line.

<h4 class="right">Right:</h4>
<pre class="code">int main()
{
    ...
}
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">int main() {
    ...
}
</pre>
</li>
<li> Other braces: place the open brace on the line preceding the code block; place the close brace on its own line.

<h4 class="right">Right:</h4>
<pre class="code">class MyClass {
    ...
};

namespace WebCore {
    ...
}

for (int i = 0; i &lt; 10; i++) {
    ...
}
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">class MyClass 
{
    ...
};
</pre>
</li><li>One-line control clauses should not use braces
<h4 class="right">Right:</h4>
<pre class="code">if (condition)
    doIt();
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">if (condition) {
    doIt();
}
</pre>
</li>

<li>Control clauses without a body should use empty braces:
<h4 class="right">Right:</h4>
<pre class="code">for ( ; current; current = current->next) { }
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">for ( ; current; current = current->next);
</pre>
</li>
</ol>

<h3>Null, false and 0</h3>
<ol>
<li>In C++, the null pointer value should be written as <code>0</code>. In C, it should be written as <code>NULL</code>. In Objective-C and Objective-C++, follow the guideline for C or C++, respectively, but use <code>nil</code> to represent a null Objective-C object.</li>
<li>C++ and C <code>bool</code> values should be written as <code>true</code> and <code>false</code>. Objective-C <code>BOOL</code> values should be written as <code>YES</code> and <code>NO</code>.</li>
<li>Tests for true/false, null/non-null, and zero/non-zero should all be done without equality comparisons.<br>

<h4 class="right">Right:</h4>
<pre class="code">if (condition)
    doIt();
    
if (!ptr)
    return;

if (!count)
    return;
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">if (condition == true)
    doIt();
    
if (ptr == NULL)
    return;
    
if (count == 0)
    return;
</pre>
</li>
<li>In Objective-C, instance variables are initialized to zero automatically. Don't add explicit initializations to nil or NO in an init method.</li>
</ol>

<h3>Names</h3>
<ol>
<li>Use CamelCase. Capitalize the first letter of a class, struct, protocol, or namespace name. Lower-case the first letter of a variable or function name. Fully capitalize acronyms.
<h4 class="right">Right:</h4>
<pre class="code">struct Data;
size_t bufferSize;
class HTMLDocument;
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">struct data;
size_t buffer_size;
class HtmlDocument;
</pre>
</li>

<li>Use full words, except in the rare case where an abbreviation would be more canonical and easier to understand.
<h4 class="right">Right:</h4>
<pre class="code">size_t characterSize;
size_t length;
short tabIndex; // more canonical
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">size_t charSize;
size_t len;
short tabulationIndex; // bizarre
</pre>
</li>

<li>Prefix C++ data members with "m_".
<h4 class="right">Right:</h4>
<pre class="code">class String {
    ...
    short m_length;
};
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">class String {
    ...
    short length;
};
</pre>
</li>

<li>Prefix Objective-C instance variables with "_".
<h4 class="right">Right:</h4>
<pre class="code">@class String
    ...
    short _length;
@end
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">@class String
    ...
    short length;
@end
</pre>
</li>

<li>Precede boolean values with words like "is" and "did".
<h4 class="right">Right:</h4>
<pre class="code">bool isValid;
bool didSendData;
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">bool valid;
bool sentData;
</pre>
</li>

<li>Precede setters with the word "set". Use bare words for getters. Setter and getter names should match the names of the variables being set/gotten.
<h4 class="right">Right:</h4>
<pre class="code">void setCount(size_t); // sets m_count
size_t count(); // returns m_count
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">void setCount(size_t); // sets m_theCount
size_t getCount();
</pre>
</li>

<li>Use descriptive verbs in function names.
<h4 class="right">Right:</h4>
<pre class="code">bool convertToASCII(short*, size_t);
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">bool toASCII(short*, size_t);
</pre>
</li>

<li>Leave meaningless variable names out of function declarations.
<h4 class="right">Right:</h4>
<pre class="code">void setCount(size_t);
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">void setCount(size_t count);
</pre>
</li>

<li>Objective-C method names should follow the Cocoa naming guidelines ‚Äî
they should read like a phrase and each piece of the selector should 
start with a lowercase letter and use intercaps.</li>
<li>Enum members should user InterCaps with an initial capital letter.</li>
<li>Prefer const to #define. Prefer inline functions to macros.</li>
<li>#defined constants should use all uppercase names with words separated by underscores.</li>
<li> Macros that expand to function calls or other non-constant computation: these 
should be named like functions, and should have parentheses at the end, even if 
they take no arguments (with the exception of some special macros like ASSERT). 
Note that usually it is preferable to use an inline function in such cases instead of a macro.<br>

<h4 class="right">Right:</h4>
<pre class="code">#define WBStopButtonTitle() \
        NSLocalizedString(@"Stop", @"Stop button title")
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">#define WB_STOP_BUTTON_TITLE \
        NSLocalizedString(@"Stop", @"Stop button title")

#define WBStopButtontitle \
        NSLocalizedString(@"Stop", @"Stop button title")
</pre>
</li>
<li>#define, #ifdef "header guards" should be named exactly the same as the file (including case), replacing the '.' with a '_'.
<h4 class="right">Right:</h4>
<pre class="code">// HTMLDocument.h
#ifndef HTMLDocument_h
#define HTMLDocument_h
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">// HTMLDocument.h
#ifndef _HTML_DOCUMENT_H_
#define _HTML_DOCUMENT_H_
</pre>
</li>
</ol>

<h3>Other Punctuation</h3>

<ol>

<li>Constructors for C++ classes should initialize all of their members using C++ 
initializer syntax.  Each member (and superclass) should be indented on a separate 
line, with the colon or comma preceding the member on that line.

<h4 class="right">Right:</h4>
<pre class="code">MyClass::MyClass(Document* doc)
    : MySuperClass()
    , m_myMember(0)
    , m_doc(doc)
{
}

MyOtherClass::MyOtherClass()
    : MySuperClass()
{
}
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">MyClass::MyClass(Document* doc) : MySuperClass()
{
    m_myMember = 0;
    m_doc = doc;
}

MyOtherClass::MyOtherClass() : MySuperClass() {}
</pre>

</li><li>Pointer types in non-C++ code ‚Äî Pointer types should be written with a space between the
type and the * (so the * is adjacent to the following identifier if any).

</li><li>Pointer and reference types in C++ code ‚Äî Both pointer types and reference types
should be written with no space between the type name and the * or &amp;.

<h4 class="right">Right:</h4>
<pre class="code">Image* SVGStyledElement::doSomething(PaintInfo&amp; paintInfo)
{
    SVGStyledElement* element = static_cast&lt;SVGStyledElement*>(node());
    const KCDashArray&amp; dashes = dashArray();
</pre>

<h4 class="wrong">Wrong:</h4>
<pre class="code">Image *SVGStyledElement::doSomething(PaintInfo &amp;paintInfo)
{
    SVGStyledElement *element = static_cast&lt;SVGStyledElement *>(node());
    const KCDashArray &amp;dashes = dashArray();
</pre>

</li></ol>

<h3>#include Statements</h3>

<ol>

<li>All files must #include "config.h" first.

</li><li>All files must #include the primary header second, just after "config.h".
So for example, Node.cpp should include Node.h first, before other files.
This guarantees that each header's completeness is tested, to make sure it
can be compiled without requiring any other header files be included first.

</li><li>Other #include statements should be in sorted order (case sensitive, as
done by the command-line sort tool or the Xcode sort selection command).
Don't bother to organize them in a logical order.

</li></ol>

</div>

<div id="nav">
    <ul id="navlist">
        <li><a href="/">Home</a></li>
        <li><a href="/blog/">Surfin‚Äô Safari Blog</a></li>
        <li><a href="http://planet.webkit.org/">Planet WebKit</a></li>
        <li><a href="/projects/goals.html">Project Goals</a></li>
        <li><a href="/contact.html">Keeping in Touch</a></li>
        <li><a href="http://trac.webkit.org/projects/webkit">Trac</a></li>

        <li class="subtitle">Working with the Code</li>

        <li><a href="/building/tools.html">Installing Developer Tools</a></li>
        <li><a href="/building/checkout.html">Getting the Code</a></li>
        <li><a href="/building/build.html">Building WebKit</a></li>
        <li><a href="/building/run.html">Running WebKit</a></li>
        <li><a href="/building/debug.html">Debugging WebKit</a></li>
        <li><a href="/coding/contributing.html">Contributing Code</a></li>
        <li><a href="/coding/commit-review-policy.html">Commit and Review Policy</a></li>

        <li class="subtitle">Documentation</li>

        <li><a href="http://trac.webkit.org/projects/webkit/wiki">Wiki</a></li>
        <li><a href="/projects/">Projects</a></li>
        <li><a href="/coding/coding-style.html">Code Style Guidelines</a></li>
        <li><a href="http://trac.webkit.org/projects/webkit/wiki/Drosera">Drosera</a></li>
        <li><a href="http://trac.webkit.org/projects/webkit/wiki/WebDevelopers">Web developer resources</a></li>
        <li><a href="/docs/hierarchy.html">DOM interfaces</a></li>

        <li class="subtitle">Testing</li>

        <li><a href="/quality/testing.html">Regression Testing</a></li>
        <li><a href="/quality/leakhunting.html">Leak Hunting</a></li>
        <li><a href="/quality/testwriting.html">Writing New Tests</a></li>
        <li><a href="/quality/crashlogs.html">Getting a Crash Log</a></li>

        <li class="subtitle">Bugs</li>

        <li><a href="/quality/reporting.html">Reporting Bugs</a></li>
        <li><a href="/quality/bugwriting.html">Bug Report Guidelines</a></li>
        <li><a href="/quality/bugpriorities.html">Bug Prioritization</a></li>
        <li><a href="/quality/reduction.html">Test Case Reduction</a></li>
        <li><a href="/quality/lifecycle.html">Bug Life Cycle</a></li>
    </ul>
    <div id="notice">
        WebKit is open source software with portions licensed under the
        <a href="/coding/lgpl-license.html">LGPL</a> and
        <a href="/coding/bsd-license.html">BSD licenses</a>.
        Complete license and copyright information can be found within the code.
    </div>

    <div id="terms">
        Hosting provided by <a href="http://www.macosforge.org/">Mac OS Forge</a>.
        Use of this site is subject to the
        <a href="http://www.macosforge.org/terms/">Mac OS Forge Terms of Use</a>.
    </div>
</div>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-336489-2";
urchinTracker();
</script>


</body></html>P£‘_WebResourceResponse_http://webkit.org/css/main.cssO4bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ&,-345MNOPQRSTUVWXYZ[\M]^bcU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_http://webkit.org/css/main.css“./01X$classesZ$classname¢12UNSURLXNSObject#A≠õä†|5»”6789CWNS.keysZNS.objectsÄ©:;<=>?@ABÄ	Ä
ÄÄÄÄÄÄÄ©DEFGHIJKLÄÄÄÄÄÄÄÄÄZKeep-Alive]Accept-RangesVServer\Content-TypeTDate^Content-LengthTEtagZConnection]Last-Modified_timeout=5, max=100Ubytes_TApache/2.2.9 (Unix) mod_ssl/2.2.9 OpenSSL/0.9.8h DAV/2 mod_python/3.3.1 Python/2.5.2Xtext/css_Fri, 14 Nov 2008 14:39:43 GMTT3147_"c4b-452fb05e4eb00"_Sun, 27 Jul 2008 05:53:16 GMT“./_`£`a2_NSMutableDictionary\NSDictionaryK“./de£ef2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d Ö ã ¶ ≠ ∞ ≥ ∑ ª æ ¡ ƒ «   Õ – ” ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ú ˙
-2;FIOXacjr}âãçèëìïóôõ•ß©´≠Ø±≥µ∑¬–◊‰È¯˝+1àë±∂ÃÏÒı $8             g              FXtext/cssOKbody {
    position: absolute;
    background-repeat: repeat-x;
    background-color: #fff;
    color: #333;
    font-size: 12px;
    line-height: 1.5em; 
    font-family: "Lucida Grande", Verdana, Arial;
    margin: 0px;
    padding: 0px;
    max-width: 850px;
}

p {
    min-width: 400px;    
}

#download {
    float: right;
    padding: 5px 0px 5px 5px;
    border: 0px;
}

#content {
    margin: 157px 20px 20px 215px;
}

#copy {
    height: 20px;
    bottom: 0px;
    left: 147px;
    padding: 10px 0px 0px 0px;
    margin: 10px 0px 0px 0px;
    text-align: center;
    font-size: 10px;
}

#footer {
    position: relative;
    left: 215px;
    margin-bottom: 20px;
}

#title {
    position: absolute;
    background-image: url( /images/end.png );
    background-repeat: no-repeat;
    background-position: right;
    height: 76px;
    top: 50px;
    left: 40px;
    right: 20px;
    margin: 0px;
    padding: 0px;
}

#title h1 {
    background-image: url( /images/middle.png );
    background-repeat: repeat-x;
    height: 53px;
    top: 0px;
    left: 0px;
    margin: 0px 24px 0px 0px;
    padding: 23px 0px 0px 175px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    text-shadow: #bbb 2px 2px 2px;
    font-size: 24px;
}

h2, h3, h4 {
    margin-bottom: 0px;
    text-shadow: #bbb 1px 1px 1px;
}

h2 {
    font-size: 16px;
}

h3 {
    font-size: 14px;
}

h4 {
    font-size: 12px;
}

h1 + p, h2 + p, h3 + p, h4 + p, b + p {
    margin-top: 2px;
}

#icon {
    position: absolute;
    top: 10px;
    left: -10px;
    background-image: url( /images/icon-gold.png );
    background-repeat: no-repeat;
    height: 174px;
    width: 215px;
    z-index: 3;
    margin: 0px;
}

/* Content */
#content ul {
    margin: 4px 0px 4px 0px;
}

#content ul > li {
    margin: 4px 0px;
}

/* Links */
a {
    text-decoration: none;
}

a:hover{
    text-decoration: underline;
}

/* Navigation */
#nav {
    position: absolute;
    background-image: url( /images/nav.png );
    background-repeat: no-repeat;
    height: 350px;
    width: 145px;
    top: 162px;
    left: 20px;
    padding: 20px 0px 0px 20px;
    font-size: 11px;
    line-height: 17px;
}

#navlist {
    margin: 0px 0px 0px -5px;
    padding: 0px;
    list-style-type: none;
}

#navlist a {
    color: #333;
}

#navlist .subtitle {
    font-weight: bold;
    margin-top: 10px;
}

#navlist li a:hover, #navlist li a:active {
    text-decoration: underline;
}

#notice, #terms {
    min-width: 0px;
    padding: 0px;
    margin: 30px 10px 10px -5px;
    font-size: 9px;
    line-height: 11px;
    color: #aaa !important;
}

#notice a {
    color: inherit !important;
    text-decoration: none;
}

#notice a:hover {
    color: #555 !important;
    text-decoration: none;
}

dt { 
    font-weight: bold;
    margin-top: 1em;
}

.code, pre, tt, code {
    font-family: Courier, Fixed;
    font-size: 110%;
}

.code {
    margin-left: 2em;
    font-size: 90%;
    line-height: normal;
}

.mac-instructions, .windows-instructions {
    border: 1px solid black;
    background-color: white;
    -webkit-border-radius: 5px;
    padding: 0 1em;
    margin: 1em 0;
}‘_http://webkit.org/css/green.cssO3bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ&,-345MNOPQRSTUVWXYZ[\M]^bcU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_http://webkit.org/css/green.css“./01X$classesZ$classname¢12UNSURLXNSObject#A≠õä°c˜j»”6789CWNS.keysZNS.objectsÄ©:;<=>?@ABÄ	Ä
ÄÄÄÄÄÄÄ©DEFGHIJKLÄÄÄÄÄÄÄÄÄZKeep-Alive]Accept-RangesVServer\Content-TypeTDate^Content-LengthTEtagZConnection]Last-Modified_timeout=5, max=99Ubytes_TApache/2.2.9 (Unix) mod_ssl/2.2.9 OpenSSL/0.9.8h DAV/2 mod_python/3.3.1 Python/2.5.2Xtext/css_Fri, 14 Nov 2008 14:39:43 GMTS285_"11d-43da2f5486000"_Mon, 29 Oct 2007 15:00:16 GMT“./_`£`a2_NSMutableDictionary\NSDictionary“./de£ef2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d Ö ã ¶ ≠ ∞ ≥ ∑ ª æ ¡ ƒ «   Õ – ” ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ú ˙
.3<GJPYbdks~Ääåéêíîñòöú¶®™¨Æ∞≤¥∂∏√—ÿÂÍ˘˛	+1àë±µÀÎÙ
#7             g              EObody {
    background-image: url( /images/green-background.png ) !important;
}

#content ul > li {
    list-style-image: url( /images/green-bullet.png ) !important;
}

#title h1, h2, h3, h4, #navlist .subtitle {
	color: #030 !important;
}

a, #navlist a {
    color: #281 !important;
}‘_)http://www.google-analytics.com/urchin.jsOΩbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ&,-345IJKLMNOPQRSTUVW[\U$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_)http://www.google-analytics.com/urchin.js“./01X$classesZ$classname¢12UNSURLXNSObject#A≠õ_WæƒÁ»”6789AWNS.keysZNS.objectsÄß:;<=>?@Ä	Ä
ÄÄÄÄÄßBCDEFGHÄÄÄÄÄÄÄ]Cache-Control_Content-Encoding\Content-TypeVServerTDate^Content-Length]Last-Modified_max-age=604800, publicTgzip_text/javascriptTucfe_Fri, 14 Nov 2008 13:07:55 GMTT6846_Tue, 17 Jun 2008 17:20:41 GMT“./XY£YZ2_NSMutableDictionary\NSDictionaryXu“./]^£^_2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d Å á ¢ © ¨ Ø ≥ ∑ ∫ Ω ¿ √ ∆ … Ã œ — ” ’ ◊ Ÿ € › ﬂ · „ Â Á Ó ˆ49BMPV_hjqyÑÜéêíîñòöú§¶®™¨Æ∞≤¿”‡ÁÏ˚	"'9>^cÉàå¢Ø≤∑ªœ             `              ›_text/javascriptOXu//-- Google Analytics Urchin Module
//-- Copyright 2007 Google, All Rights Reserved.

//-- Urchin On Demand Settings ONLY
var _uacct="";			// set up the Urchin Account
var _userv=1;			// service mode (0=local,1=remote,2=both)

//-- UTM User Settings
var _ufsc=1;			// set client info flag (1=on|0=off)
var _udn="auto";		// (auto|none|domain) set the domain name for cookies
var _uhash="on";		// (on|off) unique domain hash for cookies
var _utimeout="1800";   	// set the inactive session timeout in seconds
var _ugifpath="/__utm.gif";	// set the web path to the __utm.gif file
var _utsp="|";			// transaction field separator
var _uflash=1;			// set flash version detect option (1=on|0=off)
var _utitle=1;			// set the document title detect option (1=on|0=off)
var _ulink=0;			// enable linker functionality (1=on|0=off)
var _uanchor=0;			// enable use of anchors for campaign (1=on|0=off)
var _utcp="/";			// the cookie path for tracking
var _usample=100;		// The sampling % of visitors to track (1-100).

//-- UTM Campaign Tracking Settings
var _uctm=1;			// set campaign tracking module (1=on|0=off)
var _ucto="15768000";		// set timeout in seconds (6 month default)
var _uccn="utm_campaign";	// name
var _ucmd="utm_medium";		// medium (cpc|cpm|link|email|organic)
var _ucsr="utm_source";		// source
var _uctr="utm_term";		// term/keyword
var _ucct="utm_content";	// content
var _ucid="utm_id";		// id number
var _ucno="utm_nooverride";	// don't override

//-- Auto/Organic Sources and Keywords
var _uOsr=new Array();
var _uOkw=new Array();
_uOsr[0]="google";	_uOkw[0]="q";
_uOsr[1]="yahoo";	_uOkw[1]="p";
_uOsr[2]="msn";		_uOkw[2]="q";
_uOsr[3]="aol";		_uOkw[3]="query";
_uOsr[4]="aol";		_uOkw[4]="encquery";
_uOsr[5]="lycos";	_uOkw[5]="query";
_uOsr[6]="ask";		_uOkw[6]="q";
_uOsr[7]="altavista";	_uOkw[7]="q";
_uOsr[8]="netscape";	_uOkw[8]="query";
_uOsr[9]="cnn";	_uOkw[9]="query";
_uOsr[10]="looksmart";	_uOkw[10]="qt";
_uOsr[11]="about";	_uOkw[11]="terms";
_uOsr[12]="mamma";	_uOkw[12]="query";
_uOsr[13]="alltheweb";	_uOkw[13]="q";
_uOsr[14]="gigablast";	_uOkw[14]="q";
_uOsr[15]="voila";	_uOkw[15]="rdata";
_uOsr[16]="virgilio";	_uOkw[16]="qs";
_uOsr[17]="live";	_uOkw[17]="q";
_uOsr[18]="baidu";	_uOkw[18]="wd";
_uOsr[19]="alice";	_uOkw[19]="qs";
_uOsr[20]="yandex";	_uOkw[20]="text";
_uOsr[21]="najdi";	_uOkw[21]="q";
_uOsr[22]="aol";	_uOkw[22]="q";
_uOsr[23]="club-internet"; _uOkw[23]="query";
_uOsr[24]="mama";	_uOkw[24]="query";
_uOsr[25]="seznam";	_uOkw[25]="q";
_uOsr[26]="search";	_uOkw[26]="q";
_uOsr[27]="wp";	_uOkw[27]="szukaj";
_uOsr[28]="onet";	_uOkw[28]="qt";
_uOsr[29]="netsprint";	_uOkw[29]="q";
_uOsr[30]="google.interia";	_uOkw[30]="q";
_uOsr[31]="szukacz";	_uOkw[31]="q";
_uOsr[32]="yam";	_uOkw[32]="k";
_uOsr[33]="pchome";	_uOkw[33]="q";
_uOsr[34]="kvasir";	_uOkw[34]="searchExpr";
_uOsr[35]="sesam";	_uOkw[35]="q";
_uOsr[36]="ozu"; _uOkw[36]="q";
_uOsr[37]="terra"; _uOkw[37]="query";
_uOsr[38]="nostrum"; _uOkw[38]="query";
_uOsr[39]="mynet"; _uOkw[39]="q";
_uOsr[40]="ekolay"; _uOkw[40]="q";
_uOsr[41]="search.ilse"; _uOkw[41]="search_for";

//-- Auto/Organic Keywords to Ignore
var _uOno=new Array();
//_uOno[0]="urchin";
//_uOno[1]="urchin.com";
//_uOno[2]="www.urchin.com";

//-- Referral domains to Ignore
var _uRno=new Array();
//_uRno[0]=".urchin.com";

//-- **** Don't modify below this point ***
var _uff,_udh,_udt,_ubl=0,_udo="",_uu,_ufns=0,_uns=0,_ur="-",_ufno=0,_ust=0,_ubd=document,_udl=_ubd.location,_udlh="",_uwv="1.3";
var _ugifpath2="http://www.google-analytics.com/__utm.gif";
if (_udl.hash) _udlh=_udl.href.substring(_udl.href.indexOf('#'));
if (_udl.protocol=="https:") _ugifpath2="https://ssl.google-analytics.com/__utm.gif";
if (!_utcp || _utcp=="") _utcp="/";
function urchinTracker(page) {
 if (_udl.protocol=="file:") return;
 if (_uff && (!page || page=="")) return;
 var a,b,c,xx,v,z,k,x="",s="",f=0,nv=0;
 var nx=" expires="+_uNx()+";";
 var dc=_ubd.cookie;
 _udh=_uDomain();
 if (!_uVG()) return;
 _uu=Math.round(Math.random()*2147483647);
 _udt=new Date();
 _ust=Math.round(_udt.getTime()/1000);
 a=dc.indexOf("__utma="+_udh+".");
 b=dc.indexOf("__utmb="+_udh);
 c=dc.indexOf("__utmc="+_udh);
 if (_udn && _udn!="") { _udo=" domain="+_udn+";"; }
 if (_utimeout && _utimeout!="") {
  x=new Date(_udt.getTime()+(_utimeout*1000));
  x=" expires="+x.toGMTString()+";";
 }
 if (_ulink) {
  if (_uanchor && _udlh && _udlh!="") s=_udlh+"&";
  s+=_udl.search;
  if(s && s!="" && s.indexOf("__utma=")>=0) {
   if (!(_uIN(a=_uGC(s,"__utma=","&")))) a="-";
   if (!(_uIN(b=_uGC(s,"__utmb=","&")))) b="-";
   if (!(_uIN(c=_uGC(s,"__utmc=","&")))) c="-";
   v=_uGC(s,"__utmv=","&");
   z=_uGC(s,"__utmz=","&");
   k=_uGC(s,"__utmk=","&");
   xx=_uGC(s,"__utmx=","&");
   if ((k*1) != ((_uHash(a+b+c+xx+z+v)*1)+(_udh*1))) {_ubl=1;a="-";b="-";c="-";xx="-";z="-";v="-";}
   if (a!="-" && b!="-" && c!="-") f=1;
   else if(a!="-") f=2;
  }
 }
 if(f==1) {
  _ubd.cookie="__utma="+a+"; path="+_utcp+";"+nx+_udo;
  _ubd.cookie="__utmb="+b+"; path="+_utcp+";"+x+_udo;
  _ubd.cookie="__utmc="+c+"; path="+_utcp+";"+_udo;
 } else if (f==2) {
  a=_uFixA(s,"&",_ust);
  _ubd.cookie="__utma="+a+"; path="+_utcp+";"+nx+_udo;
  _ubd.cookie="__utmb="+_udh+"; path="+_utcp+";"+x+_udo;
  _ubd.cookie="__utmc="+_udh+"; path="+_utcp+";"+_udo;
  _ufns=1;
 } else if (a>=0 && b>=0 && c>=0) {
   b = _uGC(dc,"__utmb="+_udh,";");
   b = ("-" == b) ? _udh : b;  
  _ubd.cookie="__utmb="+b+"; path="+_utcp+";"+x+_udo;
 } else {
  if (a>=0) a=_uFixA(_ubd.cookie,";",_ust);
  else {
   a=_udh+"."+_uu+"."+_ust+"."+_ust+"."+_ust+".1";
   nv=1;
  }
  _ubd.cookie="__utma="+a+"; path="+_utcp+";"+nx+_udo;
  _ubd.cookie="__utmb="+_udh+"; path="+_utcp+";"+x+_udo;
  _ubd.cookie="__utmc="+_udh+"; path="+_utcp+";"+_udo;
  _ufns=1;
 }
 if (_ulink && xx && xx!="" && xx!="-") {
   xx=_uUES(xx);
   if (xx.indexOf(";")==-1) _ubd.cookie="__utmx="+xx+"; path="+_utcp+";"+nx+_udo;
 }
 if (_ulink && v && v!="" && v!="-") {
  v=_uUES(v);
  if (v.indexOf(";")==-1) _ubd.cookie="__utmv="+v+"; path="+_utcp+";"+nx+_udo;
 }
 var wc=window;
 var c=_ubd.cookie;
 if(wc && wc.gaGlobal && wc.gaGlobal.dh==_udh){
  var g=wc.gaGlobal;
  var ua=c.split("__utma="+_udh+".")[1].split(";")[0].split(".");
  if(g.sid)ua[3]=g.sid;
  if(nv>0){
   ua[2]=ua[3];
   if(g.vid){
    var v=g.vid.split(".");
    ua[0]=v[0];
    ua[1]=v[1];
   }
  }
  _ubd.cookie="__utma="+_udh+"."+ua.join(".")+"; path="+_utcp+";"+nx+_udo;
 }
 _uInfo(page);
 _ufns=0;
 _ufno=0;
 if (!page || page=="") _uff=1;
}
function _uGH() {
 var hid;
 var wc=window;
 if (wc && wc.gaGlobal && wc.gaGlobal.hid) {
  hid=wc.gaGlobal.hid;
 } else {
  hid=Math.round(Math.random()*0x7fffffff);
  if (!wc.gaGlobal) wc.gaGlobal={};
  wc.gaGlobal.hid=hid;
 }
 return hid;
}
function _uInfo(page) {
 var p,s="",dm="",pg=_udl.pathname+_udl.search;
 if (page && page!="") pg=_uES(page,1);
 _ur=_ubd.referrer;
 if (!_ur || _ur=="") { _ur="-"; }
 else {
  dm=_ubd.domain;
  if(_utcp && _utcp!="/") dm+=_utcp;
  p=_ur.indexOf(dm);
  if ((p>=0) && (p<=8)) { _ur="0"; }
  if (_ur.indexOf("[")==0 && _ur.lastIndexOf("]")==(_ur.length-1)) { _ur="-"; }
 }
 s+="&utmn="+_uu;
 if (_ufsc) s+=_uBInfo();
 if (_uctm) s+=_uCInfo();
 if (_utitle && _ubd.title && _ubd.title!="") s+="&utmdt="+_uES(_ubd.title);
 if (_udl.hostname && _udl.hostname!="") s+="&utmhn="+_uES(_udl.hostname);
 if (_usample && _usample != 100) s+="&utmsp="+_uES(_usample);
 s+="&utmhid="+_uGH();
 s+="&utmr="+_ur;
 s+="&utmp="+pg;
 if ((_userv==0 || _userv==2) && _uSP()) {
  var i=new Image(1,1);
  i.src=_ugifpath+"?"+"utmwv="+_uwv+s;
  i.onload=function() { _uVoid(); }
 }
 if ((_userv==1 || _userv==2) && _uSP()) {
  var i2=new Image(1,1);
  i2.src=_ugifpath2+"?"+"utmwv="+_uwv+s+"&utmac="+_uacct+"&utmcc="+_uGCS();
  i2.onload=function() { _uVoid(); }
 }
 return;
}
function _uVoid() { return; }
function _uCInfo() {
 if (!_ucto || _ucto=="") { _ucto="15768000"; }
 if (!_uVG()) return;
 var c="",t="-",t2="-",t3="-",o=0,cs=0,cn=0,i=0,z="-",s="";
 if (_uanchor && _udlh && _udlh!="") s=_udlh+"&";
 s+=_udl.search;
 var x=new Date(_udt.getTime()+(_ucto*1000));
 var dc=_ubd.cookie;
 x=" expires="+x.toGMTString()+";";
 if (_ulink && !_ubl) {
  z=_uUES(_uGC(s,"__utmz=","&"));
  if (z!="-" && z.indexOf(";")==-1) { _ubd.cookie="__utmz="+z+"; path="+_utcp+";"+x+_udo; return ""; }
 }
 z=dc.indexOf("__utmz="+_udh+".");
 if (z>-1) { z=_uGC(dc,"__utmz="+_udh+".",";"); }
 else { z="-"; }
 t=_uGC(s,_ucid+"=","&");
 t2=_uGC(s,_ucsr+"=","&");
 t3=_uGC(s,"gclid=","&");
 if ((t!="-" && t!="") || (t2!="-" && t2!="") || (t3!="-" && t3!="")) {
  if (t!="-" && t!="") c+="utmcid="+_uEC(t);
  if (t2!="-" && t2!="") { if (c != "") c+="|"; c+="utmcsr="+_uEC(t2); }
  if (t3!="-" && t3!="") { if (c != "") c+="|"; c+="utmgclid="+_uEC(t3); }
  t=_uGC(s,_uccn+"=","&");
  if (t!="-" && t!="") c+="|utmccn="+_uEC(t);
  else c+="|utmccn=(not+set)";
  t=_uGC(s,_ucmd+"=","&");
  if (t!="-" && t!="") c+="|utmcmd="+_uEC(t);
  else  c+="|utmcmd=(not+set)";
  t=_uGC(s,_uctr+"=","&");
  if (t!="-" && t!="") c+="|utmctr="+_uEC(t);
  else { t=_uOrg(1); if (t!="-" && t!="") c+="|utmctr="+_uEC(t); }
  t=_uGC(s,_ucct+"=","&");
  if (t!="-" && t!="") c+="|utmcct="+_uEC(t);
  t=_uGC(s,_ucno+"=","&");
  if (t=="1") o=1;
  if (z!="-" && o==1) return "";
 }
 if (c=="-" || c=="") { c=_uOrg(); if (z!="-" && _ufno==1)  return ""; }
 if (c=="-" || c=="") { if (_ufns==1)  c=_uRef(); if (z!="-" && _ufno==1)  return ""; }
 if (c=="-" || c=="") {
  if (z=="-" && _ufns==1) { c="utmccn=(direct)|utmcsr=(direct)|utmcmd=(none)"; }
  if (c=="-" || c=="") return "";
 }
 if (z!="-") {
  i=z.indexOf(".");
  if (i>-1) i=z.indexOf(".",i+1);
  if (i>-1) i=z.indexOf(".",i+1);
  if (i>-1) i=z.indexOf(".",i+1);
  t=z.substring(i+1,z.length);
  if (t.toLowerCase()==c.toLowerCase()) cs=1;
  t=z.substring(0,i);
  if ((i=t.lastIndexOf(".")) > -1) {
   t=t.substring(i+1,t.length);
   cn=(t*1);
  }
 }
 if (cs==0 || _ufns==1) {
  t=_uGC(dc,"__utma="+_udh+".",";");
  if ((i=t.lastIndexOf(".")) > 9) {
   _uns=t.substring(i+1,t.length);
   _uns=(_uns*1);
  }
  cn++;
  if (_uns==0) _uns=1;
  _ubd.cookie="__utmz="+_udh+"."+_ust+"."+_uns+"."+cn+"."+c+"; path="+_utcp+"; "+x+_udo;
 }
 if (cs==0 || _ufns==1) return "&utmcn=1";
 else return "&utmcr=1";
}
function _uRef() {
 if (_ur=="0" || _ur=="" || _ur=="-") return "";
 var i=0,h,k,n;
 if ((i=_ur.indexOf("://"))<0 || _uGCse()) return "";
 h=_ur.substring(i+3,_ur.length);
 if (h.indexOf("/") > -1) {
  k=h.substring(h.indexOf("/"),h.length);
  if (k.indexOf("?") > -1) k=k.substring(0,k.indexOf("?"));
  h=h.substring(0,h.indexOf("/"));
 }
 h=h.toLowerCase();
 n=h;
 if ((i=n.indexOf(":")) > -1) n=n.substring(0,i);
 for (var ii=0;ii<_uRno.length;ii++) {
  if ((i=n.indexOf(_uRno[ii].toLowerCase())) > -1 && n.length==(i+_uRno[ii].length)) { _ufno=1; break; }
 }
 if (h.indexOf("www.")==0) h=h.substring(4,h.length);
 return "utmccn=(referral)|utmcsr="+_uEC(h)+"|"+"utmcct="+_uEC(k)+"|utmcmd=referral";
}
function _uOrg(t) {
 if (_ur=="0" || _ur=="" || _ur=="-") return "";
 var i=0,h,k;
 if ((i=_ur.indexOf("://"))<0 || _uGCse()) return "";
 h=_ur.substring(i+3,_ur.length);
 if (h.indexOf("/") > -1) {
  h=h.substring(0,h.indexOf("/"));
 }
 for (var ii=0;ii<_uOsr.length;ii++) {
  if (h.toLowerCase().indexOf(_uOsr[ii].toLowerCase()) > -1) {
   if ((i=_ur.indexOf("?"+_uOkw[ii]+"=")) > -1 || (i=_ur.indexOf("&"+_uOkw[ii]+"=")) > -1) {
    k=_ur.substring(i+_uOkw[ii].length+2,_ur.length);
    if ((i=k.indexOf("&")) > -1) k=k.substring(0,i);
    for (var yy=0;yy<_uOno.length;yy++) {
     if (_uOno[yy].toLowerCase()==k.toLowerCase()) { _ufno=1; break; }
    }
    if (t) return _uEC(k);
    else return "utmccn=(organic)|utmcsr="+_uEC(_uOsr[ii])+"|"+"utmctr="+_uEC(k)+"|utmcmd=organic";
   }
  }
 }
 return "";
}
function _uGCse() {
 var h,p;
 h=p=_ur.split("://")[1];
 if(h.indexOf("/")>-1) {
  h=h.split("/")[0];
  p=p.substring(p.indexOf("/")+1,p.length);
 }
 if(p.indexOf("?")>-1) {
  p=p.split("?")[0];
 }
 if(h.toLowerCase().indexOf("google")>-1) {
  if(_ur.indexOf("?q=")>-1 || _ur.indexOf("&q=")>-1) {
   if (p.toLowerCase().indexOf("cse")>-1) {
    return true;
   }
  }
 }
}
function _uBInfo() {
 var sr="-",sc="-",ul="-",fl="-",cs="-",je=1;
 var n=navigator;
 if (self.screen) {
  sr=screen.width+"x"+screen.height;
  sc=screen.colorDepth+"-bit";
 } else if (self.java) {
  var j=java.awt.Toolkit.getDefaultToolkit();
  var s=j.getScreenSize();
  sr=s.width+"x"+s.height;
 }
 if (n.language) { ul=n.language.toLowerCase(); }
 else if (n.browserLanguage) { ul=n.browserLanguage.toLowerCase(); }
 je=n.javaEnabled()?1:0;
 if (_uflash) fl=_uFlash();
 if (_ubd.characterSet) cs=_uES(_ubd.characterSet);
 else if (_ubd.charset) cs=_uES(_ubd.charset);
 return "&utmcs="+cs+"&utmsr="+sr+"&utmsc="+sc+"&utmul="+ul+"&utmje="+je+"&utmfl="+fl;
}
function __utmSetTrans() {
 var e;
 if (_ubd.getElementById) e=_ubd.getElementById("utmtrans");
 else if (_ubd.utmform && _ubd.utmform.utmtrans) e=_ubd.utmform.utmtrans;
 if (!e) return;
 var l=e.value.split("UTM:");
 var i,i2,c;
 if (_userv==0 || _userv==2) i=new Array();
 if (_userv==1 || _userv==2) { i2=new Array(); c=_uGCS(); }

 for (var ii=0;ii<l.length;ii++) {
  l[ii]=_uTrim(l[ii]);
  if (l[ii].charAt(0)!='T' && l[ii].charAt(0)!='I') continue;
  var r=Math.round(Math.random()*2147483647);
  if (!_utsp || _utsp=="") _utsp="|";
  var f=l[ii].split(_utsp),s="";
  if (f[0].charAt(0)=='T') {
   s="&utmt=tran"+"&utmn="+r;
   f[1]=_uTrim(f[1]); if(f[1]&&f[1]!="") s+="&utmtid="+_uES(f[1]);
   f[2]=_uTrim(f[2]); if(f[2]&&f[2]!="") s+="&utmtst="+_uES(f[2]);
   f[3]=_uTrim(f[3]); if(f[3]&&f[3]!="") s+="&utmtto="+_uES(f[3]);
   f[4]=_uTrim(f[4]); if(f[4]&&f[4]!="") s+="&utmttx="+_uES(f[4]);
   f[5]=_uTrim(f[5]); if(f[5]&&f[5]!="") s+="&utmtsp="+_uES(f[5]);
   f[6]=_uTrim(f[6]); if(f[6]&&f[6]!="") s+="&utmtci="+_uES(f[6]);
   f[7]=_uTrim(f[7]); if(f[7]&&f[7]!="") s+="&utmtrg="+_uES(f[7]);
   f[8]=_uTrim(f[8]); if(f[8]&&f[8]!="") s+="&utmtco="+_uES(f[8]);
  } else {
   s="&utmt=item"+"&utmn="+r;
   f[1]=_uTrim(f[1]); if(f[1]&&f[1]!="") s+="&utmtid="+_uES(f[1]);
   f[2]=_uTrim(f[2]); if(f[2]&&f[2]!="") s+="&utmipc="+_uES(f[2]);
   f[3]=_uTrim(f[3]); if(f[3]&&f[3]!="") s+="&utmipn="+_uES(f[3]);
   f[4]=_uTrim(f[4]); if(f[4]&&f[4]!="") s+="&utmiva="+_uES(f[4]);
   f[5]=_uTrim(f[5]); if(f[5]&&f[5]!="") s+="&utmipr="+_uES(f[5]);
   f[6]=_uTrim(f[6]); if(f[6]&&f[6]!="") s+="&utmiqt="+_uES(f[6]);
  }
  if (_udl.hostname && _udl.hostname!="") s+="&utmhn="+_uES(_udl.hostname);
  if (_usample && _usample != 100) s+="&utmsp="+_uES(_usample);

  if ((_userv==0 || _userv==2) && _uSP()) {
   i[ii]=new Image(1,1);
   i[ii].src=_ugifpath+"?"+"utmwv="+_uwv+s;
   i[ii].onload=function() { _uVoid(); }
  }
  if ((_userv==1 || _userv==2) && _uSP()) {
   i2[ii]=new Image(1,1);
   i2[ii].src=_ugifpath2+"?"+"utmwv="+_uwv+s+"&utmac="+_uacct+"&utmcc="+c;
   i2[ii].onload=function() { _uVoid(); }
  }
 }
 return;
}
function _uFlash() {
 var f="-",n=navigator;
 if (n.plugins && n.plugins.length) {
  for (var ii=0;ii<n.plugins.length;ii++) {
   if (n.plugins[ii].name.indexOf('Shockwave Flash')!=-1) {
    f=n.plugins[ii].description.split('Shockwave Flash ')[1];
    break;
   }
  }
 } else {
  var fl;
  try {
   fl = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7");
   f = fl.GetVariable("$version");
  } catch(e) {}
  if (f == "-") {
   try {
    fl = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6");
    f = "WIN 6,0,21,0";
    fl.AllowScriptAccess = "always";
    f = fl.GetVariable("$version");
   } catch(e) {}
  }
  if (f == "-") {
   try {
    fl = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
    f = fl.GetVariable("$version");
   } catch(e) {}
  }
  if (f != "-") {
   f = f.split(" ")[1].split(",");
   f = f[0] + "." + f[1] + " r" + f[2];
  }
 }
 return f;
}
function __utmLinkerUrl(l,h) {
 var p,k,a="-",b="-",c="-",x="-",z="-",v="-";
 var dc=_ubd.cookie;
 var iq = l.indexOf("?");
 var ih = l.indexOf("#");
 var url=l;
 if (dc) {
  a=_uES(_uGC(dc,"__utma="+_udh+".",";"));
  b=_uES(_uGC(dc,"__utmb="+_udh,";"));
  c=_uES(_uGC(dc,"__utmc="+_udh,";"));
  x=_uES(_uGC(dc,"__utmx="+_udh,";"));
  z=_uES(_uGC(dc,"__utmz="+_udh+".",";"));
  v=_uES(_uGC(dc,"__utmv="+_udh+".",";"));
  k=(_uHash(a+b+c+x+z+v)*1)+(_udh*1);
  p="__utma="+a+"&__utmb="+b+"&__utmc="+c+"&__utmx="+x+"&__utmz="+z+"&__utmv="+v+"&__utmk="+k;
 }
 if (p) {
  if (h && ih>-1) return;
  if (h) { url=l+"#"+p; }
  else {
   if (iq==-1 && ih==-1) url=l+"?"+p;
   else if (ih==-1) url=l+"&"+p;
   else if (iq==-1) url=l.substring(0,ih-1)+"?"+p+l.substring(ih);
   else url=l.substring(0,ih-1)+"&"+p+l.substring(ih);
  }
 }
 return url;
}
function __utmLinker(l,h) {
 if (!_ulink || !l || l=="") return;
 _udl.href=__utmLinkerUrl(l,h);
}
function __utmLinkPost(f,h) {
 if (!_ulink || !f || !f.action) return;
 f.action=__utmLinkerUrl(f.action, h);
 return;
}
function __utmSetVar(v) {
 if (!v || v=="") return;
 if (!_udo || _udo == "") {
  _udh=_uDomain();
  if (_udn && _udn!="") { _udo=" domain="+_udn+";"; }
 }
 if (!_uVG()) return;
 var r=Math.round(Math.random() * 2147483647);
 _ubd.cookie="__utmv="+_udh+"."+_uES(v)+"; path="+_utcp+"; expires="+_uNx()+";"+_udo;
 var s="&utmt=var&utmn="+r;
 if (_usample && _usample != 100) s+="&utmsp="+_uES(_usample);
 if ((_userv==0 || _userv==2) && _uSP()) {
  var i=new Image(1,1);
  i.src=_ugifpath+"?"+"utmwv="+_uwv+s;
  i.onload=function() { _uVoid(); }
 }
 if ((_userv==1 || _userv==2) && _uSP()) {
  var i2=new Image(1,1);
  i2.src=_ugifpath2+"?"+"utmwv="+_uwv+s+"&utmac="+_uacct+"&utmcc="+_uGCS();
  i2.onload=function() { _uVoid(); }
 }
}
function _uGCS() {
 var t,c="",dc=_ubd.cookie;
 if ((t=_uGC(dc,"__utma="+_udh+".",";"))!="-") c+=_uES("__utma="+t+";+");
 if ((t=_uGC(dc,"__utmx="+_udh,";"))!="-") c+=_uES("__utmx="+t+";+");
 if ((t=_uGC(dc,"__utmz="+_udh+".",";"))!="-") c+=_uES("__utmz="+t+";+");
 if ((t=_uGC(dc,"__utmv="+_udh+".",";"))!="-") c+=_uES("__utmv="+t+";");
 if (c.charAt(c.length-1)=="+") c=c.substring(0,c.length-1);
 return c;
}
function _uGC(l,n,s) {
 if (!l || l=="" || !n || n=="" || !s || s=="") return "-";
 var i,i2,i3,c="-";
 i=l.indexOf(n);
 i3=n.indexOf("=")+1;
 if (i > -1) {
  i2=l.indexOf(s,i); if (i2 < 0) { i2=l.length; }
  c=l.substring((i+i3),i2);
 }
 return c;
}
function _uDomain() {
 if (!_udn || _udn=="" || _udn=="none") { _udn=""; return 1; }
 if (_udn=="auto") {
  var d=_ubd.domain;
  if (d.substring(0,4)=="www.") {
   d=d.substring(4,d.length);
  }
  _udn=d;
 }
 _udn = _udn.toLowerCase(); 
 if (_uhash=="off") return 1;
 return _uHash(_udn);
}
function _uHash(d) {
 if (!d || d=="") return 1;
 var h=0,g=0;
 for (var i=d.length-1;i>=0;i--) {
  var c=parseInt(d.charCodeAt(i));
  h=((h << 6) & 0xfffffff) + c + (c << 14);
  if ((g=h & 0xfe00000)!=0) h=(h ^ (g >> 21));
 }
 return h;
}
function _uFixA(c,s,t) {
 if (!c || c=="" || !s || s=="" || !t || t=="") return "-";
 var a=_uGC(c,"__utma="+_udh+".",s);
 var lt=0,i=0;
 if ((i=a.lastIndexOf(".")) > 9) {
  _uns=a.substring(i+1,a.length);
  _uns=(_uns*1)+1;
  a=a.substring(0,i);
  if ((i=a.lastIndexOf(".")) > 7) {
   lt=a.substring(i+1,a.length);
   a=a.substring(0,i);
  }
  if ((i=a.lastIndexOf(".")) > 5) {
   a=a.substring(0,i);
  }
  a+="."+lt+"."+t+"."+_uns;
 }
 return a;
}
function _uTrim(s) {
  if (!s || s=="") return "";
  while ((s.charAt(0)==' ') || (s.charAt(0)=='\n') || (s.charAt(0,1)=='\r')) s=s.substring(1,s.length);
  while ((s.charAt(s.length-1)==' ') || (s.charAt(s.length-1)=='\n') || (s.charAt(s.length-1)=='\r')) s=s.substring(0,s.length-1);
  return s;
}
function _uEC(s) {
  var n="";
  if (!s || s=="") return "";
  for (var i=0;i<s.length;i++) {if (s.charAt(i)==" ") n+="+"; else n+=s.charAt(i);}
  return n;
}
function __utmVisitorCode(f) {
 var r=0,t=0,i=0,i2=0,m=31;
 var a=_uGC(_ubd.cookie,"__utma="+_udh+".",";");
 if ((i=a.indexOf(".",0))<0) return;
 if ((i2=a.indexOf(".",i+1))>0) r=a.substring(i+1,i2); else return "";  
 if ((i=a.indexOf(".",i2+1))>0) t=a.substring(i2+1,i); else return "";  
 if (f) {
  return r;
 } else {
  var c=new Array('A','B','C','D','E','F','G','H','J','K','L','M','N','P','R','S','T','U','V','W','X','Y','Z','1','2','3','4','5','6','7','8','9');
  return c[r>>28&m]+c[r>>23&m]+c[r>>18&m]+c[r>>13&m]+"-"+c[r>>8&m]+c[r>>3&m]+c[((r&7)<<2)+(t>>30&3)]+c[t>>25&m]+c[t>>20&m]+"-"+c[t>>15&m]+c[t>>10&m]+c[t>>5&m]+c[t&m];
 }
}
function _uIN(n) {
 if (!n) return false;
 for (var i=0;i<n.length;i++) {
  var c=n.charAt(i);
  if ((c<"0" || c>"9") && (c!=".")) return false;
 }
 return true;
}
function _uES(s,u) {
 if (typeof(encodeURIComponent) == 'function') {
  if (u) return encodeURI(s);
  else return encodeURIComponent(s);
 } else {
  return escape(s);
 }
}
function _uUES(s) {
 if (typeof(decodeURIComponent) == 'function') {
  return decodeURIComponent(s);
 } else {
  return unescape(s);
 }
}
function _uVG() {
 if((_udn.indexOf("www.google.") == 0 || _udn.indexOf(".google.") == 0 || _udn.indexOf("google.") == 0) && _utcp=='/' && _udn.indexOf("google.org")==-1) {
  return false;
 }
 return true;
}
function _uSP() {
 var s=100;
 if (_usample) s=_usample;
 if(s>=100 || s<=0) return true;
 return ((__utmVisitorCode(1)%10000)<(s*100));
}
function urchinPathCopy(p){
 var d=document,nx,tx,sx,i,c,cs,t,h,o;
 cs=new Array("a","b","c","v","x","z");
 h=_uDomain(); if (_udn && _udn!="") o=" domain="+_udn+";";
 nx=_uNx()+";";
 tx=new Date(); tx.setTime(tx.getTime()+(_utimeout*1000));
 tx=tx.toGMTString()+";";
 sx=new Date(); sx.setTime(sx.getTime()+(_ucto*1000));
 sx=sx.toGMTString()+";";
 for (i=0;i<6;i++){
  t=" expires=";
  if (i==1) t+=tx; else if (i==2) t=""; else if (i==5) t+=sx; else t+=nx;
  c=_uGC(d.cookie,"__utm"+cs[i]+"="+h,";");
  if (c!="-") d.cookie="__utm"+cs[i]+"="+c+"; path="+p+";"+t+o;
 }
}
function _uCO() {
 if (!_utk || _utk=="" || _utk.length<10) return;
 var d='www.google.com';
 if (_utk.charAt(0)=='!') d='analytics.corp.google.com';
 _ubd.cookie="GASO="+_utk+"; path="+_utcp+";"+_udo;
 var sc=document.createElement('script');
 sc.type='text/javascript';
 sc.id="_gasojs";
 sc.src='https://'+d+'/analytics/reporting/overlay_js?gaso='+_utk+'&'+Math.random();
 document.getElementsByTagName('head')[0].appendChild(sc);  
}
function _uGT() {
 var h=location.hash, a;
 if (h && h!="" && h.indexOf("#gaso=")==0) {
  a=_uGC(h,"gaso=","&");
 } else {
  a=_uGC(_ubd.cookie,"GASO=",";");
 }
 return a;
}
var _utk=_uGT();
if (_utk && _utk!="" && _utk.length>10 && _utk.indexOf("=")==-1) {
 if (window.addEventListener) {
  window.addEventListener('load', _uCO, false); 
 } else if (window.attachEvent) { 
  window.attachEvent('onload', _uCO);
 }
}

function _uNx() {
  return (new Date((new Date()).getTime()+63072000000)).toGMTString();
}
    1 < K i  ë ® ’ € ÂD_D`DdDmDÉD§H‹HÂU4U=U_YñZ∑Z¿ZÏ^≠^ø                           ∑8