<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>CVTrackpad: OpenCV::Bitmap::Histogram Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.9 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.html"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenCV.html">OpenCV</a>::<a class="el" href="namespaceOpenCV_1_1Bitmap.html">Bitmap</a>::<a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a>
  </div>
</div>
<div class="contents">
<h1>OpenCV::Bitmap::Histogram Class Reference</h1><!-- doxytag: class="OpenCV::Bitmap::Histogram" --><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a> Support for probabilistics histograms and methods for it's manipulation.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Histogram_8h_source.html">Histogram.h</a>&gt;</code>
<p>

<p>
<a href="classOpenCV_1_1Bitmap_1_1Histogram-members.html">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#4d311b59f5232b05d6f5e25f5612d670">Histogram</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#6794bce71395437f450d30b8bfb4d6fe">Histogram</a> (const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#aec48d2b4f38f02d71058ce97ed21368">Histogram</a> (int, int *, float **, int=Array, <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *=NULL)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor for a generic <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a>.  <a href="#aec48d2b4f38f02d71058ce97ed21368"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#a2176438397388b2693611b31ee8b027">~Histogram</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#545a93d7a8d8eb27c21e97d5492e7e44">representInMask</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#fa890a944cb4696e6d67a0479683a926">copy</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Method to copy an histogram.  <a href="#fa890a944cb4696e6d67a0479683a926"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#22c88482c22bbbdd7e10953eda1381d4">clear</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets all histogram's value to zero.  <a href="#22c88482c22bbbdd7e10953eda1381d4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#79e5a7575b35963e5570ac948de4e748">compare</a> (const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *hist, int method=Correlation) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#550cde43a7c63e078865cc584be62b93">min</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#c6b8757d4baab36696f59a65dedaa21b">max</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#595bdb85e9689bd4c248d6cb02af0e03">getValue</a> (int, int=0, int=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#352bbdf14ec1b4487ed669b92ef72013">dimensions</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#f69ac6e59baf03c3cb54aed7be039443">dimensionSize</a> (int dimension) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#3d16e3a474bd000d096069d10f7c5d26">calcEMD2</a> (const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *histogram, int distanceType=EuclideanDistance) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Calcules Earth Mover's Distance.  <a href="#3d16e3a474bd000d096069d10f7c5d26"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#b8a99b562427a414f2a71e1197714521">calcBackProjection</a> (const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Calculates Back Projection.  <a href="#b8a99b562427a414f2a71e1197714521"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#ceeb91856ce1873bbb5df29b086cf8a4">calcPatchBackProjection</a> (const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *, CvSize, float, int) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Calculates Path Back projection.  <a href="#ceeb91856ce1873bbb5df29b086cf8a4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#fb55fb9df5a00c2d119bfa0b60813e93">normalize</a> (double=1.0l)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Utility to normalize histogram.  <a href="#fb55fb9df5a00c2d119bfa0b60813e93"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#f5c40839dc5339a5c9f966ce2b7cef41">threshold</a> (double threshold)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Utility to set histograms threshold.  <a href="#f5c40839dc5339a5c9f966ce2b7cef41"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#5d6597e7c8d1e9d82e04b60fd3a0bc29">createHSHistogram</a> (const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *, const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> *=NULL, int=30, int=32)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor for <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html" title="Image Implements General Constructors an utilities for manipulate images or CvArray-based...">Image</a> based Hue-Saturation <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a>.  <a href="#5d6597e7c8d1e9d82e04b60fd3a0bc29"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#72782b058d99574afd3b4618d2a353c9">createRGBHistogram</a> (const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *, const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> *=NULL)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor for <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html" title="Image Implements General Constructors an utilities for manipulate images or CvArray-based...">Image</a> based RGB <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a>.  <a href="#72782b058d99574afd3b4618d2a353c9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#38954a56a7d51e2f31142e4b028160e2">create1ChHistogram</a> (const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *, const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> *=NULL)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor for <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html" title="Image Implements General Constructors an utilities for manipulate images or CvArray-based...">Image</a> based Gray-channel <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a>.  <a href="#38954a56a7d51e2f31142e4b028160e2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#eb2537b1381b76c8ec5b461825e727c5">equalizeHist</a> (const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">An utility to equalize image's histogram.  <a href="#eb2537b1381b76c8ec5b461825e727c5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#6db2d6d36aa276c5800ed7fa5cddc884">calcEMD2</a> (const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *, const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *, int=EuclideanDistance)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Calcules Earth Mover's Distance.  <a href="#6db2d6d36aa276c5800ed7fa5cddc884"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenCV_1_1Bitmap.html#30244ab184ced76645cbc958aac0f356">Signature</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#a3ca9a9993eddf60154827cffa7e463f">signature</a> () const </td></tr>

<tr><td colspan="2"><br><h2>Static Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="namespaceOpenCV_1_1Bitmap.html#30244ab184ced76645cbc958aac0f356">Signature</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#c6bb02dce00dc1a10f6d66f0e39407fa">createSignature</a> (const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *)</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">CvHistogram *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#c7cf6a903b3717f8594102f4b1525544">m_histogram</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a> Support for probabilistics histograms and methods for it's manipulation. 
<p>
Provides also utilities for image's histogram manipulation such as equalize or back project. <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="4d311b59f5232b05d6f5e25f5612d670"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::Histogram" ref="4d311b59f5232b05d6f5e25f5612d670" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OpenCV::Bitmap::Histogram::Histogram           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="Histogram_8cpp_source.html#l00169">copy()</a>, <a class="el" href="Histogram_8cpp_source.html#l00114">create1ChHistogram()</a>, <a class="el" href="Histogram_8cpp_source.html#l00062">createHSHistogram()</a>, and <a class="el" href="Histogram_8cpp_source.html#l00091">createRGBHistogram()</a>.</p>

</div>
</div><p>
<a class="anchor" name="6794bce71395437f450d30b8bfb4d6fe"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::Histogram" ref="6794bce71395437f450d30b8bfb4d6fe" args="(const Histogram &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OpenCV::Bitmap::Histogram::Histogram           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>hist</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>.</p>

</div>
</div><p>
<a class="anchor" name="aec48d2b4f38f02d71058ce97ed21368"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::Histogram" ref="aec48d2b4f38f02d71058ce97ed21368" args="(int, int *, float **, int=Array, Histogram *=NULL)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OpenCV::Bitmap::Histogram::Histogram           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>dims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&nbsp;</td>
          <td class="paramname"> <em>sizes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float **&nbsp;</td>
          <td class="paramname"> <em>ranges</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>type</em> = <code>Array</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *&nbsp;</td>
          <td class="paramname"> <em>histToAcomul</em> = <code>NULL</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor for a generic <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a>. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>dims</em>&nbsp;</td><td>Dimensions of the histogram. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>sizes</em>&nbsp;</td><td>Size of each dimension. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>ranges</em>&nbsp;</td><td>Range for each dimension. Array size: float[2][sizes] </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>type</em>&nbsp;</td><td>Type of the histogram. HistogramType = { Array , Sparse } </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>histToAcomul</em>&nbsp;</td><td><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a> in witch acomulate new histogram. </td></tr>
  </table>
</dl>

<p>References <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>.</p>

</div>
</div><p>
<a class="anchor" name="a2176438397388b2693611b31ee8b027"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::~Histogram" ref="a2176438397388b2693611b31ee8b027" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OpenCV::Bitmap::Histogram::~Histogram           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>.</p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="b8a99b562427a414f2a71e1197714521"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::calcBackProjection" ref="b8a99b562427a414f2a71e1197714521" args="(const Image *) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> * OpenCV::Bitmap::Histogram::calcBackProjection           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *&nbsp;</td>
          <td class="paramname"> <em>rgbImage</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Calculates Back Projection. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>rgbImage</em>&nbsp;</td><td><a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html" title="Image Implements General Constructors an utilities for manipulate images or CvArray-based...">Image</a> to back project(Must be in RGB) </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Back projection </dd></dl>

<p>References <a class="el" href="Image_8h_source.html#l00127">OpenCV::Bitmap::Image::cvImage()</a>, <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>, and <a class="el" href="Image_8h_source.html#l00116">OpenCV::Bitmap::Image::size()</a>.</p>

<p>Referenced by <a class="el" href="ObjectTracker_8cpp_source.html#l00049">OpenCV::Tracking::ObjectTracker::ObjectTracker()</a>, <a class="el" href="MeanShift_8cpp_source.html#l00114">OpenCV::Tracking::MeanShift::track()</a>, <a class="el" href="CAMShift_8cpp_source.html#l00072">OpenCV::Tracking::CAMShift::track()</a>, and <a class="el" href="ObjectTracker_8cpp_source.html#l00123">OpenCV::Tracking::ObjectTracker::trackObject()</a>.</p>

</div>
</div><p>
<a class="anchor" name="3d16e3a474bd000d096069d10f7c5d26"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::calcEMD2" ref="3d16e3a474bd000d096069d10f7c5d26" args="(const Histogram *histogram, int distanceType=EuclideanDistance) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float OpenCV::Bitmap::Histogram::calcEMD2           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *&nbsp;</td>
          <td class="paramname"> <em>histogram</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>distanceType</em> = <code>EuclideanDistance</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Calcules Earth Mover's Distance. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>histogram</em>&nbsp;</td><td><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a> to compare with this. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>distanceType</em>&nbsp;</td><td>Compare Distance type; From enum DistanceType. </td></tr>
  </table>
</dl>

<p>References <a class="el" href="Histogram_8h_source.html#l00145">calcEMD2()</a>.</p>

<p>Referenced by <a class="el" href="Histogram_8h_source.html#l00145">calcEMD2()</a>.</p>

</div>
</div><p>
<a class="anchor" name="6db2d6d36aa276c5800ed7fa5cddc884"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::calcEMD2" ref="6db2d6d36aa276c5800ed7fa5cddc884" args="(const Histogram *, const Histogram *, int=EuclideanDistance)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float OpenCV::Bitmap::Histogram::calcEMD2           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *&nbsp;</td>
          <td class="paramname"> <em>histogram1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *&nbsp;</td>
          <td class="paramname"> <em>histogram2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>distanceType</em> = <code>EuclideanDistance</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Calcules Earth Mover's Distance. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>histogram1</em>&nbsp;</td><td>First histogram to compare. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>histogram2</em>&nbsp;</td><td>Second histogram to compare. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>distanceType</em>&nbsp;</td><td>Compare Distance type; From enum DistanceType. </td></tr>
  </table>
</dl>

<p>References <a class="el" href="Histogram_8h_source.html#l00163">signature()</a>.</p>

<p>Referenced by <a class="el" href="main_8cpp_source.html#l00093">main()</a>.</p>

</div>
</div><p>
<a class="anchor" name="ceeb91856ce1873bbb5df29b086cf8a4"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::calcPatchBackProjection" ref="ceeb91856ce1873bbb5df29b086cf8a4" args="(const Image *, CvSize, float, int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> * OpenCV::Bitmap::Histogram::calcPatchBackProjection           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">CvSize&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Calculates Path Back projection. 
<p>
<dl class="todo" compact><dt><b><a class="el" href="todo.html#_todo000003">Todo:</a></b></dt><dd></dd></dl>

</div>
</div><p>
<a class="anchor" name="22c88482c22bbbdd7e10953eda1381d4"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::clear" ref="22c88482c22bbbdd7e10953eda1381d4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void OpenCV::Bitmap::Histogram::clear           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets all histogram's value to zero. 
<p>

</div>
</div><p>
<a class="anchor" name="79e5a7575b35963e5570ac948de4e748"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::compare" ref="79e5a7575b35963e5570ac948de4e748" args="(const Histogram *hist, int method=Correlation) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double OpenCV::Bitmap::Histogram::compare           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *&nbsp;</td>
          <td class="paramname"> <em>hist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>method</em> = <code>Correlation</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>.</p>

</div>
</div><p>
<a class="anchor" name="fa890a944cb4696e6d67a0479683a926"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::copy" ref="fa890a944cb4696e6d67a0479683a926" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> * OpenCV::Bitmap::Histogram::copy           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Method to copy an histogram. 
<p>

<p>References <a class="el" href="Histogram_8cpp_source.html#l00037">Histogram()</a>, and <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>.</p>

<p>Referenced by <a class="el" href="MeanShift_8cpp_source.html#l00108">OpenCV::Tracking::MeanShift::setTrackingHistogram()</a>, and <a class="el" href="MeanShift_8cpp_source.html#l00101">OpenCV::Tracking::MeanShift::startTracking()</a>.</p>

</div>
</div><p>
<a class="anchor" name="38954a56a7d51e2f31142e4b028160e2"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::create1ChHistogram" ref="38954a56a7d51e2f31142e4b028160e2" args="(const Image *, const Mask *=NULL)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> * OpenCV::Bitmap::Histogram::create1ChHistogram           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *&nbsp;</td>
          <td class="paramname"> <em>image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> *&nbsp;</td>
          <td class="paramname"> <em>mask</em> = <code>NULL</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor for <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html" title="Image Implements General Constructors an utilities for manipulate images or CvArray-based...">Image</a> based Gray-channel <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a>. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>image</em>&nbsp;</td><td>BGR <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html" title="Image Implements General Constructors an utilities for manipulate images or CvArray-based...">Image</a> to generate histogram </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>mask</em>&nbsp;</td><td>Mask to apply to the image before generrate histogram </td></tr>
  </table>
</dl>

<p>References <a class="el" href="Image_8h_source.html#l00127">OpenCV::Bitmap::Image::cvImage()</a>, <a class="el" href="Histogram_8cpp_source.html#l00037">Histogram()</a>, <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>, and <a class="el" href="Histogram_8cpp_source.html#l00252">normalize()</a>.</p>

</div>
</div><p>
<a class="anchor" name="5d6597e7c8d1e9d82e04b60fd3a0bc29"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::createHSHistogram" ref="5d6597e7c8d1e9d82e04b60fd3a0bc29" args="(const Image *, const Mask *=NULL, int=30, int=32)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> * OpenCV::Bitmap::Histogram::createHSHistogram           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *&nbsp;</td>
          <td class="paramname"> <em>image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> *&nbsp;</td>
          <td class="paramname"> <em>mask</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>sizeH</em> = <code>30</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>sizeS</em> = <code>32</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor for <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html" title="Image Implements General Constructors an utilities for manipulate images or CvArray-based...">Image</a> based Hue-Saturation <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a>. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>image</em>&nbsp;</td><td>BGR <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html" title="Image Implements General Constructors an utilities for manipulate images or CvArray-based...">Image</a> to generate histogram </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>mask</em>&nbsp;</td><td>Mask to apply to the image before generrate histogram </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>sizeH</em>&nbsp;</td><td>Hue dimension Size </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>sizeS</em>&nbsp;</td><td>Saturation dimension Size </td></tr>
  </table>
</dl>

<p>References <a class="el" href="Image_8h_source.html#l00127">OpenCV::Bitmap::Image::cvImage()</a>, <a class="el" href="Histogram_8cpp_source.html#l00037">Histogram()</a>, <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>, and <a class="el" href="Image_8h_source.html#l00116">OpenCV::Bitmap::Image::size()</a>.</p>

<p>Referenced by <a class="el" href="Hand_8cpp_source.html#l00051">HumanInterface::Hand::Hand()</a>, and <a class="el" href="MeanShift_8cpp_source.html#l00071">OpenCV::Tracking::MeanShift::startTracking()</a>.</p>

</div>
</div><p>
<a class="anchor" name="72782b058d99574afd3b4618d2a353c9"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::createRGBHistogram" ref="72782b058d99574afd3b4618d2a353c9" args="(const Image *, const Mask *=NULL)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> * OpenCV::Bitmap::Histogram::createRGBHistogram           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *&nbsp;</td>
          <td class="paramname"> <em>image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> *&nbsp;</td>
          <td class="paramname"> <em>mask</em> = <code>NULL</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor for <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html" title="Image Implements General Constructors an utilities for manipulate images or CvArray-based...">Image</a> based RGB <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html" title="Histogram Support for probabilistics histograms and methods for it&#39;s manipulation...">Histogram</a>. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>image</em>&nbsp;</td><td>BGR <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html" title="Image Implements General Constructors an utilities for manipulate images or CvArray-based...">Image</a> to generate histogram </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>mask</em>&nbsp;</td><td>Mask to apply to the image before generrate histogram </td></tr>
  </table>
</dl>

<p>References <a class="el" href="Image_8h_source.html#l00127">OpenCV::Bitmap::Image::cvImage()</a>, <a class="el" href="Histogram_8cpp_source.html#l00037">Histogram()</a>, <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>, and <a class="el" href="Image_8h_source.html#l00116">OpenCV::Bitmap::Image::size()</a>.</p>

</div>
</div><p>
<a class="anchor" name="c6bb02dce00dc1a10f6d66f0e39407fa"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::createSignature" ref="c6bb02dce00dc1a10f6d66f0e39407fa" args="(const Histogram *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenCV_1_1Bitmap.html#30244ab184ced76645cbc958aac0f356">Signature</a> * OpenCV::Bitmap::Histogram::createSignature           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html">Histogram</a> *&nbsp;</td>
          <td class="paramname"> <em>histogram</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00129">dimensionSize()</a>, <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>, and <a class="el" href="Histogram_8h_source.html#l00163">signature()</a>.</p>

<p>Referenced by <a class="el" href="Histogram_8h_source.html#l00163">signature()</a>.</p>

</div>
</div><p>
<a class="anchor" name="352bbdf14ec1b4487ed669b92ef72013"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::dimensions" ref="352bbdf14ec1b4487ed669b92ef72013" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int OpenCV::Bitmap::Histogram::dimensions           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>.</p>

<p>Referenced by <a class="el" href="Histogram_8h_source.html#l00129">dimensionSize()</a>.</p>

</div>
</div><p>
<a class="anchor" name="f69ac6e59baf03c3cb54aed7be039443"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::dimensionSize" ref="f69ac6e59baf03c3cb54aed7be039443" args="(int dimension) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int OpenCV::Bitmap::Histogram::dimensionSize           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>dimension</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00128">dimensions()</a>, and <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>.</p>

<p>Referenced by <a class="el" href="Histogram_8cpp_source.html#l00257">createSignature()</a>.</p>

</div>
</div><p>
<a class="anchor" name="eb2537b1381b76c8ec5b461825e727c5"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::equalizeHist" ref="eb2537b1381b76c8ec5b461825e727c5" args="(const Image *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> * OpenCV::Bitmap::Histogram::equalizeHist           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Image</a> *&nbsp;</td>
          <td class="paramname"> <em>image</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
An utility to equalize image's histogram. 
<p>

<p>References <a class="el" href="Image_8cpp_source.html#l00088">OpenCV::Bitmap::Image::clone()</a>, and <a class="el" href="Image_8h_source.html#l00127">OpenCV::Bitmap::Image::cvImage()</a>.</p>

</div>
</div><p>
<a class="anchor" name="595bdb85e9689bd4c248d6cb02af0e03"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::getValue" ref="595bdb85e9689bd4c248d6cb02af0e03" args="(int, int=0, int=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float OpenCV::Bitmap::Histogram::getValue           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>idx0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>idx1</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>idx2</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>.</p>

</div>
</div><p>
<a class="anchor" name="c6b8757d4baab36696f59a65dedaa21b"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::max" ref="c6b8757d4baab36696f59a65dedaa21b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float OpenCV::Bitmap::Histogram::max           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>, and <a class="el" href="Histogram_8cpp_source.html#l00176">min()</a>.</p>

<p>Referenced by <a class="el" href="Histogram_8cpp_source.html#l00176">min()</a>.</p>

</div>
</div><p>
<a class="anchor" name="550cde43a7c63e078865cc584be62b93"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::min" ref="550cde43a7c63e078865cc584be62b93" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float OpenCV::Bitmap::Histogram::min           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>, and <a class="el" href="Histogram_8cpp_source.html#l00183">max()</a>.</p>

<p>Referenced by <a class="el" href="Histogram_8cpp_source.html#l00183">max()</a>.</p>

</div>
</div><p>
<a class="anchor" name="fb55fb9df5a00c2d119bfa0b60813e93"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::normalize" ref="fb55fb9df5a00c2d119bfa0b60813e93" args="(double=1.0l)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void OpenCV::Bitmap::Histogram::normalize           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>factor</em> = <code>1.0l</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Utility to normalize histogram. 
<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>.</p>

<p>Referenced by <a class="el" href="Histogram_8cpp_source.html#l00114">create1ChHistogram()</a>.</p>

</div>
</div><p>
<a class="anchor" name="545a93d7a8d8eb27c21e97d5492e7e44"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::representInMask" ref="545a93d7a8d8eb27c21e97d5492e7e44" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenCV_1_1Bitmap_1_1Image.html">Mask</a> * OpenCV::Bitmap::Histogram::representInMask           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>.</p>

</div>
</div><p>
<a class="anchor" name="a3ca9a9993eddf60154827cffa7e463f"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::signature" ref="a3ca9a9993eddf60154827cffa7e463f" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenCV_1_1Bitmap.html#30244ab184ced76645cbc958aac0f356">Signature</a>* OpenCV::Bitmap::Histogram::signature           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="Histogram_8cpp_source.html#l00257">createSignature()</a>.</p>

<p>Referenced by <a class="el" href="Histogram_8cpp_source.html#l00204">calcEMD2()</a>, and <a class="el" href="Histogram_8cpp_source.html#l00257">createSignature()</a>.</p>

</div>
</div><p>
<a class="anchor" name="f5c40839dc5339a5c9f966ce2b7cef41"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::threshold" ref="f5c40839dc5339a5c9f966ce2b7cef41" args="(double threshold)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void OpenCV::Bitmap::Histogram::threshold           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>threshold</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Utility to set histograms threshold. 
<p>

<p>References <a class="el" href="Histogram_8h_source.html#l00166">m_histogram</a>.</p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="c7cf6a903b3717f8594102f4b1525544"></a><!-- doxytag: member="OpenCV::Bitmap::Histogram::m_histogram" ref="c7cf6a903b3717f8594102f4b1525544" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">CvHistogram* <a class="el" href="classOpenCV_1_1Bitmap_1_1Histogram.html#c7cf6a903b3717f8594102f4b1525544">OpenCV::Bitmap::Histogram::m_histogram</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="Histogram_8cpp_source.html#l00217">calcBackProjection()</a>, <a class="el" href="Histogram_8h_source.html#l00124">compare()</a>, <a class="el" href="Histogram_8cpp_source.html#l00169">copy()</a>, <a class="el" href="Histogram_8cpp_source.html#l00114">create1ChHistogram()</a>, <a class="el" href="Histogram_8cpp_source.html#l00062">createHSHistogram()</a>, <a class="el" href="Histogram_8cpp_source.html#l00091">createRGBHistogram()</a>, <a class="el" href="Histogram_8cpp_source.html#l00257">createSignature()</a>, <a class="el" href="Histogram_8h_source.html#l00128">dimensions()</a>, <a class="el" href="Histogram_8h_source.html#l00129">dimensionSize()</a>, <a class="el" href="Histogram_8cpp_source.html#l00190">getValue()</a>, <a class="el" href="Histogram_8cpp_source.html#l00042">Histogram()</a>, <a class="el" href="Histogram_8cpp_source.html#l00183">max()</a>, <a class="el" href="Histogram_8cpp_source.html#l00176">min()</a>, <a class="el" href="Histogram_8cpp_source.html#l00252">normalize()</a>, <a class="el" href="Histogram_8cpp_source.html#l00139">representInMask()</a>, <a class="el" href="Histogram_8h_source.html#l00159">threshold()</a>, and <a class="el" href="Histogram_8cpp_source.html#l00057">~Histogram()</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="Histogram_8h_source.html">Histogram.h</a><li><a class="el" href="Histogram_8cpp.html">Histogram.cpp</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Mon Jun 1 19:41:27 2009 for CVTrackpad by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.9 </small></address>
</body>
</html>
